#foreach($field in ${table.fields})
#if(${field.keyFlag})
    #set($primaryKeyField = ${field})##
    #break
#end
#end
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package.Parent}.dal.mapper.${entity}Mapper">
  <resultMap id="BaseResultMap" type="${package.Parent}.dal.model.${entity}">
#foreach($field in ${table.fields})
#if(${field.keyFlag})
    <id column="${field.name}" jdbcType="${field.metaInfo.jdbcType}" property="${field.propertyName}" />
#else
    <result column="${field.name}" jdbcType="${field.metaInfo.jdbcType}" property="${field.propertyName}" />
#end
 #end
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ${table.fieldNames}
  </sql>
  <select id="selectByExample" parameterType="${package.Parent}.dal.model.${entity}Example" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <choose>
      <when test="selectFetch != null">
          ${selectFetch}
      </when>
      <otherwise>
          <include refid="Base_Column_List" />
      </otherwise>
      </choose>
    from ${table.name}
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      limit ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.${primaryKeyField.propertyType}" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selectFetch != null">
        ${selectFetch}
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from ${table.name}
    where ${primaryKeyField.name} = #{${primaryKeyField.propertyName},jdbcType=${primaryKeyField.metaInfo.jdbcType}}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.${primaryKeyField.propertyType}">
    delete from ${table.name}
      where ${primaryKeyField.name} = #{${primaryKeyField.propertyName},jdbcType=${primaryKeyField.metaInfo.jdbcType}}
  </delete>
  <delete id="deleteByExample" parameterType="${package.Parent}.dal.model.${entity}Example">
    delete from ${table.name}
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="${package.Parent}.dal.model.${entity}">
    insert into ${table.name} (
      ${table.fieldNames}
    )
    values (
#foreach($field in ${table.fields})
      #{${field.propertyName},jdbcType=${field.metaInfo.jdbcType}}#if(${foreach.hasNext()}), #end
#end
    )
  </insert>
  <insert id="insertSelective" parameterType="${package.Parent}.dal.model.${entity}">
    insert into ${table.name}
    <trim prefix="(" suffix=")" suffixOverrides=",">
#foreach($field in ${table.fields})
      <if test="${field.propertyName} != null">
        ${field.name},
      </if>
#end
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
#foreach($field in ${table.fields})
      <if test="${field.propertyName} != null">
        #{${field.propertyName},jdbcType=${field.metaInfo.jdbcType}},
      </if>
#end
    </trim>
  </insert>
  <select id="countByExample" parameterType="${package.Parent}.dal.model.${entity}Example" resultType="java.lang.${primaryKeyField.propertyType}">
    select count(*) from ${table.name}
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ${table.name}
    <set>
#foreach($field in ${table.fields})
      <if test="row.${field.propertyName} != null">
        ${field.name} = #{row.${field.propertyName},jdbcType=${field.metaInfo.jdbcType}},
      </if>
#end
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ${table.name}
    set #foreach($field in ${table.fields})${field.name} = #{row.${field.propertyName},jdbcType=${field.metaInfo.jdbcType}}#if(${foreach.hasNext()}),#[[
      ]]##end#end
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="${package.Parent}.dal.model.${entity}">
    update ${table.name}
    <set>
#foreach($field in ${table.fields})
#if(!${field.keyFlag})
      <if test="${field.propertyName} != null">
        ${field.name} = #{${field.propertyName},jdbcType=${field.metaInfo.jdbcType}},
      </if>
#end
#end
    </set>
    where ${primaryKeyField.name} = #{${primaryKeyField.propertyName},jdbcType=${primaryKeyField.metaInfo.jdbcType}}
  </update>
  <update id="updateByPrimaryKey" parameterType="${package.Parent}.dal.model.${entity}">
    update ${table.name}
      set #foreach($field in ${table.fields})#if(!${field.keyFlag})${field.name} = #{${field.propertyName},jdbcType=${field.metaInfo.jdbcType}}#if(${foreach.hasNext()}), #[[
        ]]##end#end#end
    where ${primaryKeyField.name} = #{${primaryKeyField.propertyName},jdbcType=${primaryKeyField.metaInfo.jdbcType}}
  </update>
  <update id="batchUpdate" parameterType="java.util.List">
    update ${table.name}
    <trim prefix="set" suffixOverrides=",">
#foreach($field in ${table.fields})
#if(!${field.keyFlag})
      <trim prefix="${field.propertyName} = case" suffix="end,">
        <foreach collection="list" index="id" item="item">
          when ${primaryKeyField.name} = #{item.${primaryKeyField.propertyName},jdbcType=${primaryKeyField.metaInfo.jdbcType}} then #{item.${field.propertyName},jdbcType=${field.metaInfo.jdbcType}}
        </foreach>
      </trim>
#end
#end
    </trim>
    where ${primaryKeyField.name} in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.${primaryKeyField.propertyName},jdbcType=${primaryKeyField.metaInfo.jdbcType}}
    </foreach>
    <trim prefix="values (" suffix=")" suffixOverrides="," />
  </update>
  <update id="batchUpdateSelective" parameterType="java.util.List">
    update ${table.name}
    <trim prefix="set" suffixOverrides=",">
#foreach($field in ${table.fields})
#if(!${field.keyFlag})
      <trim prefix="${field.name} = case" suffix="end,">
        <foreach collection="list" index="${primaryKeyField.name}" item="item">
          <if test="item.${field.propertyName} != null">
            when ${primaryKeyField.name} = #{item.${primaryKeyField.propertyName},jdbcType=${primaryKeyField.metaInfo.jdbcType}} then #{item.${field.propertyName},jdbcType=${field.metaInfo.jdbcType}}
          </if>
        </foreach>
      </trim>
#end
#end
    </trim>
    where ${primaryKeyField.name} in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
        #{item.${primaryKeyField.propertyName},jdbcType=${primaryKeyField.metaInfo.jdbcType}}
    </foreach>
    <trim prefix="values (" suffix=")" suffixOverrides="," />
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into ${table.name} (
      ${table.fieldNames}
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
#foreach($field in ${table.fields})
        #{item.${field.propertyName},jdbcType=${field.metaInfo.jdbcType}}#if(${foreach.hasNext()}), #end
#end
      )
    </foreach>
  </insert>
</mapper>
